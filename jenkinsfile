pipeline {
    agent any
    
    environment {
        DOCKERHUB_USERNAME = credentials('dockerhub-username')
        DOCKERHUB_PASSWORD = credentials('dockerhub-password')
        AWS_ACCESS_KEY_ID = credentials('aws-access-key-id')
        AWS_SECRET_ACCESS_KEY = credentials('aws-secret-access-key')
        AWS_DEFAULT_REGION = 'your-aws-region'
        ECR_REPO = 'your-ecr-repo'
        IMAGE_NAME = 'your-image-name'
        TAG = 'latest'
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('Build and Push to Docker Hub') {
            steps {
                script {
                    // Build Docker image
                    docker.build("${DOCKERHUB_USERNAME}/${IMAGE_NAME}:${TAG}")
                    
                    // Log in to Docker Hub
                    docker.withRegistry('https://registry.hub.docker.com', DOCKERHUB_USERNAME, DOCKERHUB_PASSWORD) {
                        // Push Docker image to Docker Hub
                        docker.image("${DOCKERHUB_USERNAME}/${IMAGE_NAME}:${TAG}").push()
                    }
                }
            }
        }
        
        stage('Build and Push to ECR') {
            steps {
                script {
                    // Log in to AWS ECR
                    withCredentials([string(credentialsId: 'aws-credentials', variable: 'AWS_ACCESS_KEY_ID'),
                                     string(credentialsId: 'aws-credentials', variable: 'AWS_SECRET_ACCESS_KEY')]) {
                        sh "aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
                    }
                    
                    // Tag Docker image for ECR
                    docker.image("${DOCKERHUB_USERNAME}/${IMAGE_NAME}:${TAG}").tag("${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${ECR_REPO}:${TAG}")
                    
                    // Push Docker image to ECR
                    docker.image("${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${ECR_REPO}:${TAG}").push()
                }
            }
        }
    }
}
